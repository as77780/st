// -alpha_dither yes -dither 2 -non_opaque_image_format ARGB8888 -opaque_image_format RGB888 0x0db60243
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

extern const unsigned char _Down_arrow[];
extern const unsigned char _Down_arrow_pressed[];
extern const unsigned char _Up_arrow[];
extern const unsigned char _Up_arrow_pressed[];
extern const unsigned char _blue_textures_carbon_fibre[];
extern const unsigned char _btn_round[];
extern const unsigned char _btn_round_pressed[];
extern const unsigned char _configuration[];
extern const unsigned char _control_equalizer[];
extern const unsigned char _control_equalizer_blue[];
extern const unsigned char _dark_icons_power_48[];
extern const unsigned char _dark_slider_horizontal_medium_indicators_slider2_round_nob[];
extern const unsigned char _dark_slider_horizontal_medium_slider_round_back[];
extern const unsigned char _dark_slider_horizontal_medium_slider_round_fill[];
extern const unsigned char _equalizer[];
extern const unsigned char _media_equalizer[];

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _Down_arrow, 0, 32, 19, 12, 10, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _Down_arrow_pressed, 0, 32, 19, 12, 10, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _Up_arrow, 0, 32, 19, 12, 3, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _Up_arrow_pressed, 0, 32, 19, 12, 3, 8, 4, touchgfx::Bitmap::ARGB8888 },
    { _blue_textures_carbon_fibre, 0, 24, 22, 0, 0, 24, 22, touchgfx::Bitmap::RGB888 },
    { _btn_round, 0, 97, 60, 15, 9, 67, 40, touchgfx::Bitmap::ARGB8888 },
    { _btn_round_pressed, 0, 97, 60, 15, 9, 67, 40, touchgfx::Bitmap::ARGB8888 },
    { _configuration, 0, 48, 48, 44, 19, 2, 8, touchgfx::Bitmap::ARGB8888 },
    { _control_equalizer, 0, 48, 48, 9, 6, 30, 33, touchgfx::Bitmap::ARGB8888 },
    { _control_equalizer_blue, 0, 48, 48, 9, 6, 30, 33, touchgfx::Bitmap::ARGB8888 },
    { _dark_icons_power_48, 0, 48, 48, 38, 12, 6, 22, touchgfx::Bitmap::ARGB8888 },
    { _dark_slider_horizontal_medium_indicators_slider2_round_nob, 0, 54, 34, 8, 4, 38, 24, touchgfx::Bitmap::ARGB8888 },
    { _dark_slider_horizontal_medium_slider_round_back, 0, 352, 15, 7, 0, 338, 14, touchgfx::Bitmap::ARGB8888 },
    { _dark_slider_horizontal_medium_slider_round_fill, 0, 352, 15, 7, 1, 338, 12, touchgfx::Bitmap::ARGB8888 },
    { _equalizer, 0, 48, 48, 34, 11, 4, 22, touchgfx::Bitmap::ARGB8888 },
    { _media_equalizer, 0, 48, 48, 1, 3, 46, 40, touchgfx::Bitmap::ARGB8888 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}

