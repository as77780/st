// 4.12.2 dither_algorithm=2 alpha_dither=yes layout_rotation=0 opaque_image_format=RGB888 non_opaque_image_format=ARGB8888 section=ExtFlashSection extra_section=ExtFlashSection generate_png=no 0x23b695af
// Generated by imageconverter. Please, do not edit!

#include <touchgfx/Bitmap.hpp>
#include <BitmapDatabase.hpp>

extern const unsigned char _blue_textures_carbon_fibre[]; // BITMAP_BLUE_TEXTURES_CARBON_FIBRE_ID = 0, Size: 24x22 pixels
extern const unsigned char _btn_round[]; // BITMAP_BTN_ROUND_ID = 1, Size: 97x60 pixels
extern const unsigned char _btn_round_pressed[]; // BITMAP_BTN_ROUND_PRESSED_ID = 2, Size: 97x60 pixels
extern const unsigned char _configuration[]; // BITMAP_CONFIGURATION_ID = 3, Size: 48x48 pixels
extern const unsigned char _dark_clocks_backgrounds_clock_classic_background[]; // BITMAP_DARK_CLOCKS_BACKGROUNDS_CLOCK_CLASSIC_BACKGROUND_ID = 4, Size: 233x243 pixels
extern const unsigned char _dark_clocks_hands_clock_classic_hour_hand[]; // BITMAP_DARK_CLOCKS_HANDS_CLOCK_CLASSIC_HOUR_HAND_ID = 5, Size: 5x45 pixels
extern const unsigned char _dark_clocks_hands_clock_classic_minute_hand[]; // BITMAP_DARK_CLOCKS_HANDS_CLOCK_CLASSIC_MINUTE_HAND_ID = 6, Size: 5x65 pixels
extern const unsigned char _dark_clocks_hands_clock_classic_second_hand[]; // BITMAP_DARK_CLOCKS_HANDS_CLOCK_CLASSIC_SECOND_HAND_ID = 7, Size: 9x103 pixels
extern const unsigned char _dark_icons_power_48[]; // BITMAP_DARK_ICONS_POWER_48_ID = 8, Size: 48x48 pixels
extern const unsigned char _dark_radio_buttons_radio_round_button_active[]; // BITMAP_DARK_RADIO_BUTTONS_RADIO_ROUND_BUTTON_ACTIVE_ID = 9, Size: 44x44 pixels
extern const unsigned char _dark_radio_buttons_radio_round_button_inactive[]; // BITMAP_DARK_RADIO_BUTTONS_RADIO_ROUND_BUTTON_INACTIVE_ID = 10, Size: 44x44 pixels
extern const unsigned char _dark_radio_buttons_radio_round_button_normal[]; // BITMAP_DARK_RADIO_BUTTONS_RADIO_ROUND_BUTTON_NORMAL_ID = 11, Size: 44x44 pixels
extern const unsigned char _dark_radio_buttons_radio_round_button_pressed[]; // BITMAP_DARK_RADIO_BUTTONS_RADIO_ROUND_BUTTON_PRESSED_ID = 12, Size: 44x44 pixels
extern const unsigned char _dark_slider_horizontal_medium_indicators_slider2_round_nob[]; // BITMAP_DARK_SLIDER_HORIZONTAL_MEDIUM_INDICATORS_SLIDER2_ROUND_NOB_ID = 13, Size: 54x34 pixels
extern const unsigned char _dark_slider_horizontal_medium_slider_round_back[]; // BITMAP_DARK_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_BACK_ID = 14, Size: 352x15 pixels
extern const unsigned char _dark_slider_horizontal_medium_slider_round_fill[]; // BITMAP_DARK_SLIDER_HORIZONTAL_MEDIUM_SLIDER_ROUND_FILL_ID = 15, Size: 352x15 pixels
extern const unsigned char _dark_textures_carbon_fibre[]; // BITMAP_DARK_TEXTURES_CARBON_FIBRE_ID = 16, Size: 24x22 pixels
extern const unsigned char _down_arrow[]; // BITMAP_DOWN_ARROW_ID = 17, Size: 32x19 pixels
extern const unsigned char _down_arrow_pressed[]; // BITMAP_DOWN_ARROW_PRESSED_ID = 18, Size: 32x19 pixels
extern const unsigned char _equalizer[]; // BITMAP_EQUALIZER_ID = 19, Size: 48x48 pixels
extern const unsigned char _ic[]; // BITMAP_IC_ID = 20, Size: 64x64 pixels
extern const unsigned char _ico[]; // BITMAP_ICO_ID = 21, Size: 48x48 pixels
extern const unsigned char _up_arrow[]; // BITMAP_UP_ARROW_ID = 22, Size: 32x19 pixels
extern const unsigned char _up_arrow_pressed[]; // BITMAP_UP_ARROW_PRESSED_ID = 23, Size: 32x19 pixels

const touchgfx::Bitmap::BitmapData bitmap_database[] =
{
    { _blue_textures_carbon_fibre, 0, 24, 22, 0, 0, 24, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 22, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _btn_round, 0, 97, 60, 15, 9, 67, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _btn_round_pressed, 0, 97, 60, 15, 9, 67, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 40, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _configuration, 0, 48, 48, 44, 19, 2, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_clocks_backgrounds_clock_classic_background, 0, 233, 243, 46, 50, 143, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 142, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_clocks_hands_clock_classic_hour_hand, 0, 5, 45, 2, 4, 1, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 39, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_clocks_hands_clock_classic_minute_hand, 0, 5, 65, 2, 2, 1, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 61, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_clocks_hands_clock_classic_second_hand, 0, 9, 103, 4, 1, 1, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 94, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_icons_power_48, 0, 48, 48, 38, 12, 6, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 22, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_radio_buttons_radio_round_button_active, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_radio_buttons_radio_round_button_inactive, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_radio_buttons_radio_round_button_normal, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_radio_buttons_radio_round_button_pressed, 0, 44, 44, 9, 8, 26, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 28, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_slider_horizontal_medium_indicators_slider2_round_nob, 0, 54, 34, 8, 4, 38, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 24, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_slider_horizontal_medium_slider_round_back, 0, 352, 15, 7, 0, 338, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 14, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_slider_horizontal_medium_slider_round_fill, 0, 352, 15, 7, 1, 338, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 12, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _dark_textures_carbon_fibre, 0, 24, 22, 0, 0, 24, (uint8_t)(touchgfx::Bitmap::RGB888) >> 3, 22, (uint8_t)(touchgfx::Bitmap::RGB888) & 0x7 },
    { _down_arrow, 0, 32, 19, 12, 10, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _down_arrow_pressed, 0, 32, 19, 12, 10, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _equalizer, 0, 48, 48, 34, 11, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 22, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _ic, 0, 64, 64, 14, 30, 37, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _ico, 0, 48, 48, 22, 16, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 10, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _up_arrow, 0, 32, 19, 12, 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 },
    { _up_arrow_pressed, 0, 32, 19, 12, 3, 8, (uint8_t)(touchgfx::Bitmap::ARGB8888) >> 3, 4, (uint8_t)(touchgfx::Bitmap::ARGB8888) & 0x7 }
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
}
