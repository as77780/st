/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAIN_VIEW_BASE_HPP
#define MAIN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/TiledImage.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Button.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/containers/scrollers/ScrollWheelWithSelectionStyle.hpp>
#include <gui/containers/InputContainer1.hpp>
#include <gui/containers/InputCenterContainer.hpp>

#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/canvas/Line.hpp>
#include <touchgfx/widgets/canvas/PainterRGB888.hpp>
class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase() {}

    virtual void setupScreen();

    virtual void scrollWheelInputUpdateItem(InputContainer1& item, int16_t itemIndex)
    {
        // Override and implement this function in Main
    }

    virtual void scrollWheelInputUpdateCenterItem(InputCenterContainer& item, int16_t itemIndex)
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::TiledImage tiledImage1;
    touchgfx::TextAreaWithTwoWildcards clock_m;
    touchgfx::Button Power_main;
    touchgfx::Button ButtonEqualizer;
    touchgfx::Box box1;
    touchgfx::ScrollWheelWithSelectionStyle scrollWheelInput;
    touchgfx::DrawableListItems<InputContainer1, 4> scrollWheelInputListItems;
    touchgfx::DrawableListItems<InputCenterContainer, 2> scrollWheelInputSelectedListItems;

    touchgfx::TextArea textArea1;
    touchgfx::Line line1;
    touchgfx::PainterRGB888 line1Painter;
    touchgfx::Line line1_1;
    touchgfx::PainterRGB888 line1_1Painter;

    /*
     * Wildcard Buffers
     */
    static const uint16_t CLOCK_MBUFFER1_SIZE = 3;
    touchgfx::Unicode::UnicodeChar clock_mBuffer1[CLOCK_MBUFFER1_SIZE];
    static const uint16_t CLOCK_MBUFFER2_SIZE = 3;
    touchgfx::Unicode::UnicodeChar clock_mBuffer2[CLOCK_MBUFFER2_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void updateItemCallbackHandler(DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainViewBase, DrawableListItemsInterface*, int16_t, int16_t> updateItemCallback;

    /*
     * Canvas Buffer Size
     */
    static const uint16_t CANVAS_BUFFER_SIZE = 7200;
    uint8_t canvasBuffer[CANVAS_BUFFER_SIZE];

};

#endif // MAIN_VIEW_BASE_HPP
