/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    updateItemCallback(this, &MainViewBase::updateItemCallbackHandler)
{
    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_CARBON_FIBRE_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);

    Power_main.setXY(20, 205);
    Power_main.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_POWER_48_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_POWER_48_ID));
    Power_main.setAction(buttonCallback);

    ButtonEqualizer.setXY(416, 205);
    ButtonEqualizer.setBitmaps(touchgfx::Bitmap(BITMAP_EQUALIZER_ID), touchgfx::Bitmap(BITMAP_EQUALIZER_ID));
    ButtonEqualizer.setAction(buttonCallback);

    digitalClock1.setPosition(0, 0, 125, 54);
    digitalClock1.setColor(touchgfx::Color::getColorFrom24BitRGB(171, 171, 171));
    digitalClock1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    digitalClock1.setTime24Hour(10, 10, 0);

    buttonInput.setXY(344, 205);
    buttonInput.setBitmaps(touchgfx::Bitmap(BITMAP_ICO_ID), touchgfx::Bitmap(BITMAP_ICO_ID));
    buttonInput.setAction(buttonCallback);

    boxWithBorder1.setPosition(257, 105, 207, 94);
    boxWithBorder1.setColor(touchgfx::Color::getColorFrom24BitRGB(0, 0, 0));
    boxWithBorder1.setBorderColor(touchgfx::Color::getColorFrom24BitRGB(251, 255, 0));
    boxWithBorder1.setBorderSize(5);

    scrollWheelVolume.setPosition(264, 119, 192, 67);
    scrollWheelVolume.setHorizontal(true);
    scrollWheelVolume.setCircular(false);
    scrollWheelVolume.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    scrollWheelVolume.setSwipeAcceleration(20);
    scrollWheelVolume.setDragAcceleration(20);
    scrollWheelVolume.setNumberOfItems(80);
    scrollWheelVolume.setSelectedItemOffset(60);
    scrollWheelVolume.setSelectedItemExtraSize(0, 0);
    scrollWheelVolume.setSelectedItemMargin(0, 0);
    scrollWheelVolume.setDrawableSize(72, 0);
    scrollWheelVolume.setDrawables(scrollWheelVolumeListItems, updateItemCallback,
                              scrollWheelVolumeSelectedListItems, updateItemCallback);
    scrollWheelVolume.animateToItem(10, 0);

    textArea1.setXY(257, 74);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(82, 255, 0));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID33));

    add(tiledImage1);
    add(Power_main);
    add(ButtonEqualizer);
    add(digitalClock1);
    add(buttonInput);
    add(boxWithBorder1);
    add(scrollWheelVolume);
    add(textArea1);
}

void MainViewBase::setupScreen()
{
    scrollWheelVolume.initialize();
    for (int i = 0; i < scrollWheelVolumeListItems.getNumberOfDrawables(); i++)
    {
        scrollWheelVolumeListItems[i].initialize();
    }
    for (int i = 0; i < scrollWheelVolumeSelectedListItems.getNumberOfDrawables(); i++)
    {
        scrollWheelVolumeSelectedListItems[i].initialize();
    }
}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Power_main)
    {
        //PowerOff
        //When Power_main clicked change screen to Screen2
        //Go to Screen2 with screen transition towards West
        application().gotoScreen2ScreenCoverTransitionWest();
    }
    else if (&src == &ButtonEqualizer)
    {
        //IntEqu
        //When ButtonEqualizer clicked change screen to Equalizer
        //Go to Equalizer with screen transition towards East
        application().gotoEqualizerScreenCoverTransitionEast();
    }
    else if (&src == &buttonInput)
    {
        //InteractionToInput
        //When buttonInput clicked change screen to ScreenInputMenu
        //Go to ScreenInputMenu with screen transition towards South
        application().gotoScreenInputMenuScreenSlideTransitionSouth();
    }
}

void MainViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{
    if (items == &scrollWheelVolumeListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        InputContainer1* cc = (InputContainer1*)d;
        scrollWheelVolumeUpdateItem(*cc, itemIndex);
    }
    else if (items == &scrollWheelVolumeSelectedListItems)
    {
        touchgfx::Drawable* d = items->getDrawable(containerIndex);
        InputCenterContainer* cc = (InputCenterContainer*)d;
        scrollWheelVolumeUpdateCenterItem(*cc, itemIndex);
    }
}
