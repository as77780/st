/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/main_screen/MainViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

MainViewBase::MainViewBase() :
    buttonCallback(this, &MainViewBase::buttonCallbackHandler)
{
    tiledImage1.setBitmap(touchgfx::Bitmap(BITMAP_BLUE_TEXTURES_CARBON_FIBRE_ID));
    tiledImage1.setPosition(0, 0, 480, 272);
    tiledImage1.setOffset(0, 0);

    Power_main.setXY(20, 205);
    Power_main.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_POWER_48_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_POWER_48_ID));
    Power_main.setAction(buttonCallback);

    ButtonEqualizer.setXY(416, 205);
    ButtonEqualizer.setBitmaps(touchgfx::Bitmap(BITMAP_EQUALIZER_ID), touchgfx::Bitmap(BITMAP_EQUALIZER_ID));
    ButtonEqualizer.setAction(buttonCallback);

    digitalClock1.setPosition(0, 0, 125, 54);
    digitalClock1.setColor(touchgfx::Color::getColorFrom24BitRGB(171, 171, 171));
    digitalClock1.setTypedText(touchgfx::TypedText(T_SINGLEUSEID27));
    digitalClock1.displayLeadingZeroForHourIndicator(true);
    digitalClock1.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    digitalClock1.setTime24Hour(10, 10, 0);

    buttonInput.setXY(344, 205);
    buttonInput.setBitmaps(touchgfx::Bitmap(BITMAP_ICO_ID), touchgfx::Bitmap(BITMAP_ICO_ID));
    buttonInput.setAction(buttonCallback);

    box1.setPosition(368, 71, 101, 95);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(46, 43, 43));

    ButVolUP.setXY(302, 71);
    ButVolUP.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_48_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_UP_ARROW_48_ID));
    ButVolUP.setDelay(30);
    ButVolUP.setInterval(12);
    ButVolUP.setAction(buttonCallback);

    ButVolDown.setXY(302, 138);
    ButVolDown.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_48_ID), touchgfx::Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_48_ID));
    ButVolDown.setDelay(30);
    ButVolDown.setInterval(12);
    ButVolDown.setAction(buttonCallback);

    textVolume.setXY(368, 68);
    textVolume.setColor(touchgfx::Color::getColorFrom24BitRGB(189, 189, 194));
    textVolume.setLinespacing(0);
    Unicode::snprintf(textVolumeBuffer, TEXTVOLUME_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID35).getText());
    textVolume.setWildcard(textVolumeBuffer);
    textVolume.resizeToCurrentText();
    textVolume.setTypedText(touchgfx::TypedText(T_SINGLEUSEID34));

    add(tiledImage1);
    add(Power_main);
    add(ButtonEqualizer);
    add(digitalClock1);
    add(buttonInput);
    add(box1);
    add(ButVolUP);
    add(ButVolDown);
    add(textVolume);
}

void MainViewBase::setupScreen()
{

}

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &Power_main)
    {
        //PowerOff
        //When Power_main clicked change screen to Screen2
        //Go to Screen2 with screen transition towards West
        application().gotoScreen2ScreenCoverTransitionWest();
    }
    else if (&src == &ButtonEqualizer)
    {
        //IntEqu
        //When ButtonEqualizer clicked change screen to Equalizer
        //Go to Equalizer with screen transition towards East
        application().gotoEqualizerScreenCoverTransitionEast();
    }
    else if (&src == &buttonInput)
    {
        //InteractionToInput
        //When buttonInput clicked change screen to ScreenInputMenu
        //Go to ScreenInputMenu with screen transition towards South
        application().gotoScreenInputMenuScreenSlideTransitionSouth();
    }
    else if (&src == &ButVolUP)
    {
        //InterVolUP
        //When ButVolUP clicked call virtual function
        //Call FunVolUP
        FunVolUP();
    }
    else if (&src == &ButVolDown)
    {
        //InterFunVolDown
        //When ButVolDown clicked call virtual function
        //Call FunVolDown
        FunVolDown();
    }
}
